# CI
name: CI

on:
  push:
    branches: 
    - main
  pull_request:
    branches:
    - main

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
#　　- name: Delete image
#    　uses: bots-house/ghcr-delete-image-action@v1.0.0
#      with:
#        # NOTE: at now only orgs is supported
#        owner: bots-house
#        name: ${GITHUB_REPOSITORY}/test_container:tmp
#        # NOTE: using Personal Access Token
#        token: ${{ secrets.GITHUB_TOKEN }}
##        tag: tmp
    - uses: actions/checkout@v1
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: set env
      run: |
        PR=$(echo $GITHUB_REF | sed -e 's/[^0-9]//g')
        IMAGE_NAME=test_container:PR${PR} # docer imageの名前とそのタグ、${GITHUB_REF#refs/heads/}でブランチ名を取得している
        echo "IMAGE_REF=ghcr.io/${GITHUB_REPOSITORY}/${IMAGE_NAME}" >> $GITHUB_ENV
    - uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
#        security-checks: 'vuln,config'
        ignore-unfixed: false
        exit-code: '1'
#        format: 'sarif'
#        output: 'trivy-results.sarif'
        severity: 'HIGH,CRITICAL'
#    - name: Upload Trivy scan results to GitHub Security tab
#      uses: github/codeql-action/upload-sarif@v1
#      with:
#        sarif_file: 'trivy-results.sarif'
            
    - name: build image # userで外部ファイル or 定義済みの処理を実行できる。ここではリポジトリのcheckout
      run: |
        docker build . -t ${IMAGE_REF}
  
    - uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMAGE_REF }}
        scan-type: image
        ignore-unfixed: true
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL'
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'
      
    - name: push image # userで外部ファイル or 定義済みの処理を実行できる。ここではリポジトリのcheckout
      run: |
        docker push ${{ env.IMAGE_REF }}

